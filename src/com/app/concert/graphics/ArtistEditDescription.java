/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package concertdb;

import bo.User;
import dao.ArtistHandler;

/**
 *
 * @author Kohner Smith
 */
@SuppressWarnings("serial")
public class ArtistEditDescription extends BaseWindow {
    

	private User artist;
	
    /**
     * Creates new form ArtistEditDecription
     */
    public ArtistEditDescription(BaseWindow lw, User artist) {
    	this.artist = artist;
        this.lastWindow = lw;
        this.setTitle("Artist Page");
        initComponents();
        populateArtist();
        closePrevious();
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArtistEditDescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArtistEditDescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArtistEditDescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArtistEditDescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        this.setVisible(true);

    }
    
    
    private void populateArtist(){
        String artists = new ArtistHandler().loadArtistDescription(artistEmailTextfield.getText());
        DescriptionTextArea.setText(artists);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackGround = new javax.swing.JPanel();
        TabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        SubmitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DescriptionTextArea = new javax.swing.JTextArea();
        artistEmailTextfield = new javax.swing.JTextField();
        artistEmailLabel = new javax.swing.JLabel();
        artistRefreshButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BackGround.setBackground(new java.awt.Color(92, 64, 51));

        TabbedPane.setBackground(new java.awt.Color(255, 222, 89));
        TabbedPane.setForeground(new java.awt.Color(92, 64, 51));
        TabbedPane.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 222, 89));

        SubmitButton.setBackground(new java.awt.Color(92, 64, 51));
        SubmitButton.setForeground(new java.awt.Color(255, 222, 89));
        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
                populateArtist();
            }
        });

        DescriptionTextArea.setBackground(new java.awt.Color(92, 64, 51));
        DescriptionTextArea.setColumns(20);
        DescriptionTextArea.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        DescriptionTextArea.setForeground(new java.awt.Color(255, 222, 89));
        DescriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(DescriptionTextArea);

        artistEmailTextfield.setBackground(new java.awt.Color(92, 64, 51));
        artistEmailTextfield.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        artistEmailTextfield.setForeground(new java.awt.Color(255, 222, 89));
        artistEmailTextfield.setText(artist.getUserEmail());
        artistEmailTextfield.setEnabled(false);

        artistEmailLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        artistEmailLabel.setForeground(new java.awt.Color(92, 64, 51));
        artistEmailLabel.setText("Email");

        artistRefreshButton.setBackground(new java.awt.Color(92, 64, 51));
        artistRefreshButton.setForeground(new java.awt.Color(255, 222, 89));
        artistRefreshButton.setText("Refresh");
        artistRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artistRefreshButtonActionPerformed(evt);
                populateArtist();
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(57, 57, 57)
                            .addComponent(artistEmailLabel)
                            .addGap(26, 26, 26)
                            .addComponent(artistEmailTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(artistRefreshButton))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(624, 624, 624)
                            .addComponent(SubmitButton))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(artistEmailTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(artistEmailLabel)
                    .addComponent(artistRefreshButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SubmitButton)
                .addGap(26, 26, 26))
        );

        TabbedPane.addTab("Edit Description", jPanel1);

        javax.swing.GroupLayout BackGroundLayout = new javax.swing.GroupLayout(BackGround);
        BackGround.setLayout(BackGroundLayout);
        BackGroundLayout.setHorizontalGroup(
            BackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane)
        );
        BackGroundLayout.setVerticalGroup(
            BackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        ArtistHandler ah = new ArtistHandler();
    	String userEmail = artistEmailTextfield.getText();
        String description = DescriptionTextArea.getText();
        ah.updateArtistDescription(description, userEmail);   
        populateArtist();
        
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void artistRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_artistRefreshButtonActionPerformed
        populateArtist();
    }//GEN-LAST:event_artistRefreshButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackGround;
    private javax.swing.JTextArea DescriptionTextArea;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JLabel artistEmailLabel;
    private javax.swing.JTextField artistEmailTextfield;
    private javax.swing.JButton artistRefreshButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
